{"version":3,"sources":["firebase/firebase-config.js","helpers/cargaNotas.js","helpers/subirArchivo.js","types/types.js","actions/notas.js","hooks/useForm.js","components/journal/Barra.js","components/journal/Nota.js","components/journal/NotaNo.js","components/journal/NotaInd.js","components/journal/Notas.js","actions/auth.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/InternalRouter.js","routers/RutaPrivada.js","routers/RutaPublica.js","routers/AppRouter.js","reducers/notasReducer.js","store/store.js","reducers/authReducer.js","reducers/uiReducer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","google","auth","GoogleAuthProvider","cargaNotas","uid","a","collection","get","datosNota","notes","forEach","datosInd","push","id","data","subirArchivo","archivo","formData","FormData","append","fetch","method","body","respuesta","ok","json","datos","secure_url","console","log","types","crearNotaRedcuer","nota","type","payload","activarNota","cargarNotas","dispatch","notasTotales","editarNotaFirebase","getState","url","noteFirestore","doc","update","then","Swal","fire","title","icon","actualizarNotas","notasBorradas","useForm","valoresIniciales","useState","valores","setvalores","cambioInput","e","target","name","value","reset","resetearForm","nuevoEstado","Barra","active","useSelector","state","notas","useDispatch","className","onChange","imagen","files","notaActiva","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","URL","close","style","display","onClick","document","querySelector","click","Nota","titulo","cuerpo","ref","useRef","useEffect","current","placeholder","src","alt","delete","NotaNo","size","NotaInd","fecha","backgroundImage","backgroundSize","moment","format","Notas","map","login","nombre","displayName","colocarError","mensaje","startLoading","finishLoading","limpiarNotas","Sidebar","preventDefault","signOut","nuevaNota","Date","now","add","color","JournalScreen","LoginScreen","loading","ui","email","password","onSubmit","signInWithEmailAndPassword","user","catch","error","confirmButtonText","loginEmailPassword","disabled","to","signInWithPopup","RegisterScreen","password1","password2","validar","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","message","registrarFirebase","InternalRouter","exact","path","component","RutaPrivada","autenticado","Component","res","props","RutaPublica","AppRouter","espera","setespera","setautenticado","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e7f679e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyACAbGF66NACm4_qu7Cr8rnwuqHxkb8cPs\",\r\n    authDomain: \"app-notas-aba06.firebaseapp.com\",\r\n    projectId: \"app-notas-aba06\",\r\n    storageBucket: \"app-notas-aba06.appspot.com\",\r\n    messagingSenderId: \"712296400542\",\r\n    appId: \"1:712296400542:web:a8ecea4d2d4e68a4ee9d8f\",\r\n    measurementId: \"G-PLFWJ139NG\"\r\n}\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst google = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    firebase,\r\n    db,\r\n    google\r\n}","\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\nexport const cargaNotas = async(uid) => {\r\n    const datosNota= await db.collection(`${uid}/journal/notas`).get()\r\n    const notes = [];\r\n\r\n    datosNota.forEach(datosInd => {\r\n        notes.push({\r\n            id: datosInd.id,\r\n            ...datosInd.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n\r\n}","export const subirArchivo = async (archivo) => {\r\n    const url = 'https://api.cloudinary.com/v1_1/defok5em4/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'Journal');\r\n    formData.append('file', archivo);\r\n\r\n    try {\r\n        const respuesta = await fetch(url, {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n        if(respuesta.ok){\r\n            const datos = await respuesta.json();\r\n            return datos.secure_url\r\n        }else{\r\n            throw await respuesta.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}","export const types = {\r\n    // Login\r\n    authlogin: '[auth] Login',\r\n    authlogged: '[auth] Logged',\r\n\r\n    // Error\r\n    setError: '[error] SetError',\r\n    removeError: '[error] RemoveError',\r\n\r\n    // Bloquer el boton con loading\r\n    loadingStart: '[loading] Start',\r\n    loadingFinish: '[loading] Finish',\r\n\r\n    // Notas\r\n    crearNota: '[notas] Crear Nota',\r\n    borrarrNota: '[notas] Borrar Nota',\r\n    actualizarNota: '[notas] Actualizar Nota',\r\n    cargarNotas: '[notas] Cargar Notas',\r\n    activanota: '[notas] Nota Activa',\r\n    actualizarImagen: '[notas] Actualizar Imagen',\r\n    limpiarNotas: '[notas] Limpieza Cerrar Sesion'\r\n}","import Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { cargaNotas } from \"../helpers/cargaNotas\"\r\nimport { subirArchivo } from \"../helpers/subirArchivo\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const crearNota = () => {\r\n    return (dispatch, getState) => {\r\n        const uid = getState().auth.uid\r\n        const nuevaNota = {\r\n            titulo: '',\r\n            cuerpo: '',\r\n            fecha: Date.now(),\r\n            url: ''\r\n        }\r\n        db.collection(`${uid}/journal/notas`).add(nuevaNota).then((document) => {\r\n        \r\n            dispatch(activarNota(document.id, nuevaNota))\r\n            dispatch(crearNotaRedcuer(document.id, nuevaNota))\r\n         \r\n\r\n        })\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const crearNotaRedcuer = ( id, nota ) => ({\r\n    type: types.crearNota,\r\n    payload: {\r\n        id, ...nota\r\n    }\r\n})\r\n\r\n\r\nexport const activarNota = (id, nota) => {\r\n    return {\r\n        type: types.activanota,\r\n        payload: {\r\n            id,\r\n            ...nota\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setNotas = (notas) => {\r\n    return {\r\n        type: types.cargarNotas,\r\n        payload: notas\r\n    }\r\n}\r\n\r\nexport const cargarNotas = (id) => {\r\n   return async(dispatch) => {\r\n    const notasTotales = await cargaNotas(id)\r\n    dispatch(setNotas(notasTotales))\r\n   }\r\n}\r\n\r\n\r\nexport const editarNotaFirebase = (nota) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        if(!nota.url) {\r\n            delete nota.url\r\n        }\r\n        const noteFirestore = {...nota}\r\n        delete noteFirestore.id\r\n        await db.doc(`${uid}/journal/notas/${nota.id}`).update(noteFirestore).then(() => {\r\n            Swal.fire({\r\n                title: 'Nota Actualizada',\r\n                icon: 'success'\r\n            })\r\n        })\r\n        dispatch(actualizarNotas(nota.id, nota))\r\n        \r\n    }\r\n\r\n}\r\n\r\nconst actualizarNotas = (id,nota) => ({\r\n    type: types.actualizarNota,\r\n    payload: {\r\n        id,\r\n        nota\r\n    }\r\n})\r\n\r\n\r\nexport const subirImagen = (archivo) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const notaActiva = getState().notas.active;\r\n        Swal.fire({\r\n            title: 'Actualizando...',\r\n            text: 'Espera un momento',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const URL = await subirArchivo(archivo)\r\n        notaActiva.url = URL;\r\n       dispatch(editarNotaFirebase(notaActiva))\r\n        Swal.close();\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const borrarNota = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        db.doc(`${uid}/journal/notas/${id}`).delete()\r\n        dispatch(notasBorradas(id))\r\n    }\r\n}\r\n\r\nconst notasBorradas = (id) => ({\r\n    type: types.borrarrNota,\r\n    payload: id\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n    \r\n    const [valores, setvalores] = useState(valoresIniciales)\r\n\r\n    const cambioInput = (e) => {\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const reset = () => {\r\n        setvalores(valoresIniciales)\r\n    }\r\n\r\n    const resetearForm = (nuevoEstado = valoresIniciales) => {\r\n        setvalores(nuevoEstado)\r\n\r\n    }\r\n\r\n    return [valores, cambioInput, reset, resetearForm]\r\n    \r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editarNotaFirebase, subirImagen } from '../../actions/notas'\r\n\r\nexport const Barra = () => {\r\n    const {active} = useSelector(state => state.notas)\r\n    const dispatch = useDispatch()\r\n\r\n    const guardarNota = () => {\r\n        dispatch(editarNotaFirebase(active))\r\n\r\n    }\r\n\r\n    const MostrarImagen = () => {\r\n        document.querySelector(\"#Archivo\").click();\r\n    }\r\n  \r\n\r\n    const cambioArchivo = (e) => {\r\n        const imagen = e.target.files[0];\r\n        if(imagen){\r\n            dispatch(subirImagen(imagen));\r\n        }\r\n        \r\n\r\n    }\r\n   \r\n    return (\r\n        <div className=\"journal__barra\">\r\n            <span>28 Agoto de 2021</span>\r\n            <input\r\n                type=\"file\"\r\n                onChange={cambioArchivo}\r\n                id=\"Archivo\"\r\n                style={{\r\n                    display: 'none'                   \r\n                }}\r\n\r\n\r\n            />\r\n      \r\n                <button className=\"boton boton-2\" onClick={guardarNota}>Guardar</button>\r\n                <button className=\"boton boton-2\"  onClick={MostrarImagen} >Imagen</button>\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activarNota, borrarNota } from '../../actions/notas'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport {Barra} from './Barra'\r\n\r\nexport const Nota = () => {\r\n\r\n    const {active} = useSelector(state => state.notas)\r\n    const [valores, cambioInput, , resetearForm] = useForm(active)\r\n    const {titulo, cuerpo} = valores\r\n\r\n    const ref = useRef(active.id)\r\n    const dispatch = useDispatch()\r\n\r\n  \r\n    useEffect(() => {\r\n        if(active.id !== ref.current){\r\n            resetearForm(active);\r\n            ref.current = active.id\r\n        }\r\n   },[active,resetearForm])\r\n\r\n   useEffect(() => {\r\n    dispatch(activarNota(valores.id, {...valores}))\r\n       \r\n   }, [valores, dispatch])\r\n\r\nconst borrandoNota = () => {\r\n    dispatch(borrarNota(active.id))\r\n}\r\n    return (\r\n        <>  \r\n             <Barra />\r\n            <div className=\"nota__main-content\">\r\n            <div className=\"nota__ingresar\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Titulo de la nota\"\r\n                    className=\"nota__titulo\"\r\n                    name=\"titulo\"\r\n                    value={titulo}\r\n                    onChange={cambioInput}\r\n                />\r\n                <textarea \r\n                    placeholder=\"Texto de la nota\"\r\n                    className=\"nota__cuerpo\"\r\n                    name=\"cuerpo\"\r\n                    value={cuerpo}\r\n                    onChange={cambioInput}\r\n                ></textarea>\r\n            </div> \r\n            <div className=\"nota__imagen-content\">\r\n            {\r\n                active.url &&  <img src={active.url} alt=\"imagen\" className=\"imagen__principal\"/>\r\n           \r\n            }   \r\n            </div>    \r\n            </div>\r\n            <button className=\"boton boton-3\" onClick={borrandoNota}>Borrar</button>\r\n        </>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotaNo = () => {\r\n    return (\r\n        <div className=\"journal__nota-no\">\r\n            <box-icon name='error-alt' size=\"100px\"></box-icon>\r\n            <h1 className=\"notano__title\">Selecciona una Nota para continuar....</h1>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {activarNota} from '../../actions/notas'\r\n\r\n\r\nexport const NotaInd = ({id,titulo,cuerpo,fecha,url}) => {\r\n    const dispatch = useDispatch()\r\n    const mostrarNota = () => {\r\n        dispatch(activarNota(id, {\r\n            titulo,\r\n            cuerpo,\r\n            fecha,\r\n            url\r\n        }))\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"nota__individual\" onClick={mostrarNota}>\r\n            {\r\n                (url) &&\r\n                <div className=\"nota__imagen\"\r\n                style={{\r\n                    backgroundImage: `url(${url})`,\r\n                    backgroundSize: 'cover',\r\n                }}>\r\n                \r\n            </div>\r\n            }\r\n            <div className=\"nota__texto\">\r\n                <h3>{titulo}</h3>\r\n                <p>{cuerpo}</p>\r\n            </div>\r\n            <div className=\"nota__fecha\">\r\n                <span>{moment(fecha).format('dddd')}</span>\r\n                <p>{moment(fecha).format('D')}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NotaInd } from './NotaInd';\r\n\r\nexport const Notas = () => {\r\n    // const notasTotales = [1,2,3,4,6];\r\n    const {notas} = useSelector(state => state.notas)\r\n    // console.log(state)\r\n    return (\r\n        <div className=\"notas__totales\">\r\n        {\r\n            notas.map(nota => <NotaInd key={nota.id} {...nota}/>)\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\nimport {firebase, google} from '../firebase/firebase-config'\r\nimport Swal from \"sweetalert2\"\r\n\r\n\r\n// Login\r\nexport const login = (id, nombre) => {\r\n    return {\r\n        type: types.authlogin,\r\n        payload: {\r\n            uid: id,\r\n            displayName: nombre\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const loginEmailPassword =  (email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(({user}) => {\r\n            dispatch(startLoading())\r\n            dispatch(login(user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n        }).catch(error => {\r\n            Swal.fire({\r\n                title: 'Usuario no Registrado',\r\n                text: 'Ir al Registro',\r\n                icon: 'error',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n            dispatch(finishLoading())\r\n        })\r\n    }\r\n    \r\n}\r\nexport const loginGoogle = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(google).then(({user}) =>{\r\n            dispatch(login(user.uid, user.displayName))\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Register\r\n\r\nexport const registrarFirebase = (email, password, nombre) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email,password).then(async({user}) => {\r\n         \r\n           await user.updateProfile({\r\n               displayName: nombre\r\n           })\r\n           dispatch(login(user.uid, user.displayName))\r\n           \r\n        }).catch(({message}) =>{\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'El correo ya esta registrado',\r\n                icon: 'error',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n         \r\n        })\r\n    }\r\n}\r\n\r\nexport const colocarError = (mensaje) => {\r\n   \r\n    return {\r\n        type: types.setError,\r\n        payload: mensaje\r\n    }\r\n}\r\n\r\nexport const quitarError = () => {\r\n    return {\r\n        type: types.setError       \r\n    }\r\n}\r\n\r\n// Loading en el Login\r\n\r\nconst startLoading = () => {\r\n    return {\r\n        type: types.loadingStart\r\n    }\r\n}\r\n\r\nconst finishLoading = () => {\r\n    return {\r\n        type: types.loadingFinish\r\n    }\r\n}\r\n\r\n// Logout\r\nconst logout = () => {\r\n    return {\r\n        type: types.authlogged\r\n    }\r\n}\r\n\r\nexport const logoutFirebase = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut()\r\n            dispatch(logout())\r\n            dispatch(limpiarNotas())\r\n           \r\n        \r\n    }\r\n}\r\n\r\nexport const limpiarNotas = () => {\r\n    \r\n    return {\r\n        type: types.limpiarNotas,\r\n        \r\n    }\r\n}\r\n","import React from 'react'\r\nimport 'boxicons'\r\nimport { Notas } from './Notas'\r\nimport { useDispatch } from 'react-redux'\r\nimport {logoutFirebase} from '../../actions/auth'\r\nimport { crearNota } from '../../actions/notas'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch()\r\n    const cerrarSesion = (e) => {\r\n        e.preventDefault();\r\n        dispatch(logoutFirebase())\r\n\r\n    }\r\n    const crearNotaBoton = () => {\r\n        dispatch(crearNota());\r\n    }\r\n    return (\r\n        <div className=\"journal__aside\">\r\n            <div className=\"journal__usuario\">\r\n                <h3>Oscar Ascencio</h3>\r\n                <button className=\"boton boton-4\" onClick={cerrarSesion}>Cerrar Sesión</button>\r\n            </div>\r\n            <div className=\"agregar__entrada\" onClick={crearNotaBoton}>\r\n                <box-icon name='add-to-queue' size='lg' color=\"white\" ></box-icon>\r\n                <p className=\"agregar__texto\">Crear Nota</p>\r\n            </div>\r\n            <Notas />\r\n            <h1 className=\"journal__title\">Notas App</h1>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n// import { Barra } from './Barra'\r\nimport { Nota } from './Nota'\r\nimport { NotaNo } from './NotaNo'\r\nimport { Sidebar } from './Sidebar'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n    const {active} = useSelector(state => state.notas)\r\n    return (\r\n        <div className=\"journal__content\">\r\n        <Sidebar />\r\n        <div className=\"journal__main\">\r\n            \r\n            {\r\n                (active) ? <Nota /> : <NotaNo />\r\n            }\r\n\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { loginEmailPassword, loginGoogle } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n    const {loading} = useSelector(state => state.ui)\r\n   \r\n\r\n    const [valores, cambioInput] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    \r\n    const inicioSesion = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginEmailPassword(email, password))\r\n        // console.log(email, password)\r\n    }\r\n    const {email, password} = valores\r\n\r\n    const iniciarGoogle = () => {\r\n        dispatch(loginGoogle())\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"auth__login\">\r\n            <form className=\"auth__form-login\" onSubmit={inicioSesion}>\r\n                <h1 className=\"auth__title\">Inicia Sesión</h1>\r\n                <input \r\n                    type=\"email\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={cambioInput}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={cambioInput}\r\n\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    className=\"boton boton-1 animate__animated animate__fadeInLeft\">\r\n                    Iniciar Sesión\r\n                </button>\r\n\r\n\r\n              \r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"boton\">\r\n                    ¿No tienes una Cuenta?\r\n                </Link>\r\n            </form>\r\n\r\n    \r\n            <button\r\n                    onClick={iniciarGoogle}\r\n                    className=\"boton boton-goole animate__animated animate__fadeInLeft\">\r\n                    Iniciar Sesión con Google\r\n                \r\n            </button>\r\n              \r\n            \r\n            \r\n        </div>\r\n        <div className=\"auth__imagen\"></div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch } from 'react-redux'\r\nimport { colocarError, quitarError, registrarFirebase } from '../../actions/auth'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [valores, cambioInput, reset] = useForm({\r\n        nombre:'',\r\n        email: '',\r\n        password1: '',\r\n        password2: ''\r\n    })\r\n    const {nombre, email, password1,password2} = valores\r\n    const registro = (e) => {\r\n        e.preventDefault();\r\n        if(validar()){\r\n            dispatch(quitarError())\r\n            dispatch(registrarFirebase(email,password2,nombre))\r\n            Swal.fire({\r\n                title: 'Cuenta Creada',\r\n                text: 'Ir al Login',\r\n                icon: 'success',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n            reset();\r\n\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const validar = () => {\r\n        if(nombre.trim().length === 0){\r\n            dispatch(colocarError(\"Nombre Requerido\"))\r\n\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'Nombre Requerido',\r\n                icon: 'error',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n            return false;\r\n\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(colocarError(\"Email Incorrecto\"))\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'Email Incorrecto',\r\n                icon: 'error',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n            return false;\r\n\r\n        }else if(password1 !== password2 || password1.length < 6){\r\n            dispatch(colocarError(\"Contraseña debe de sey mayor a 6 caracteres\"))\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'Contraseña debe de sey mayor a 6 caracteres',\r\n                icon: 'error',\r\n                confirmButtonText: 'Aceptar'\r\n            })\r\n            return false;\r\n        }\r\n        return true\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"auth__login\">\r\n\r\n            <form className=\"auth__form-register\" onSubmit={registro}>\r\n                <h1 className=\"auth__title\">Crea una Cuenta</h1>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Nombre\"\r\n                    value={nombre}\r\n                    name=\"nombre\"\r\n                    onChange={cambioInput}\r\n                />\r\n                <input \r\n                    type=\"email\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={cambioInput}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Password\"\r\n                    value={password1}\r\n                    name=\"password1\"\r\n                    onChange={cambioInput}\r\n\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Password Again\"\r\n                    value={password2}\r\n                    name=\"password2\"\r\n                    onChange={cambioInput}\r\n\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton boton-1\">\r\n                    Registrarse\r\n                </button>\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"boton\">\r\n                    ¿Ya tienes una Cuenta?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n        <div className=\"auth__imagen\"></div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const InternalRouter = () => {\r\n    return (\r\n        <div className=\"auth__content\">\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const RutaPrivada = ({\r\n    autenticado,\r\n    component:Component,\r\n    ...res\r\n}) => {\r\n    return (\r\n      <Route {...res} component={props => autenticado ? <Component {...props}/> : <Redirect to=\"auth/login\" />}/>\r\n    )\r\n}\r\n","\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const RutaPublica = ({\r\n    autenticado,\r\n    component: Component,\r\n    ...res\r\n}) => {\r\n    return (\r\n      <Route {...res} component={props => !autenticado ? <Component {...props}/> : <Redirect to=\"/\" /> }/>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { InternalRouter } from './InternalRouter'\r\nimport { RutaPrivada } from './RutaPrivada'\r\nimport { RutaPublica } from './RutaPublica'\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { cargarNotas } from '../actions/notas'\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch()\r\n    const [espera, setespera] = useState(true);\r\n    const [autenticado, setautenticado] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName))\r\n                setautenticado(true)\r\n                dispatch(cargarNotas(user.uid))\r\n            }else{\r\n                setautenticado(false)\r\n            }\r\n            setespera(false)\r\n        })\r\n\r\n    },[dispatch, setespera, setautenticado])\r\n\r\n    if(espera) {\r\n        return (\r\n            <h1>Espere</h1>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <RutaPrivada exact path=\"/\" component={JournalScreen} autenticado={autenticado}/>\r\n                    <RutaPublica path=\"/auth\" component={InternalRouter} autenticado={autenticado}/>\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </Router>\r\n        \r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst valoresIniciales = {\r\n    notas: [],\r\n    active: null\r\n}\r\n\r\nexport const notasReducer = (state = valoresIniciales, action) => {\r\n    switch (action.type) {\r\n        case types.activanota:\r\n        return {\r\n            ...state,\r\n            active: action.payload\r\n        }\r\n        case types.crearNota:\r\n            return {\r\n                ...state,\r\n                notas: [ action.payload, ...state.notas ]\r\n            }\r\n        \r\n        case types.cargarNotas:\r\n        \r\n            return {\r\n                ...state,\r\n                notas: [...action.payload]\r\n                \r\n            }\r\n        case types.actualizarNota:\r\n            return {\r\n                ...state,\r\n                notas: state.notas.map(nota => nota.id === action.payload.id ? action.payload.nota : nota)\r\n            }\r\n        \r\n        case types.borrarrNota:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notas: state.notas.filter(nota => nota.id !== action.payload)\r\n            }    \r\n        case types.limpiarNotas:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notas: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n\r\n}","import { combineReducers, createStore,applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notasReducer } from \"../reducers/notasReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notas: notasReducer,\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\texport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.authlogin:\r\n            return {\r\n                uid: action.payload.uid,\r\n                displayName: action.payload.displayName,\r\n            }\r\n        case types.authlogged:\r\n            return {}     \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const uiReducer = (state ={error: null, loading: false}, action) => {\r\n    switch (action.type) {\r\n        case types.setError:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case types.removeError:\r\n            return {\r\n                ...state,\r\n                error: null\r\n                }\r\n            \r\n        case types.loadingStart:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.loadingFinish:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\nimport './style/style.scss'\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>    \r\n    )\r\n}\r\n","\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}